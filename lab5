5.1

	.data
x:	.asciiz "x = "
y:	.asciiz "\ny = "
	.text
	.globl main
main:
	li $t3, 1	# int x = 1
	li $t4, 0	# int y = 0
	beq $t3, $0, zero	# if(x == 0)
	li $t1, 1
	beq $t3, $t1, one	# else if(x == 1)
	li $t4, 100	# y = 100
	b exit
one:	addi $t4, $t4, -1	# y--
	b exit
zero:	addi $t4, $t4, 1	# y++
exit:	la $a0, x
	li $v0, 4
	syscall
	move $a0, $t3
	li $v0, 1
	syscall
	la $a0, y
	li $v0, 4
	syscall
	move $a0, $t4
	li $v0, 1
	syscall
	li $v0, 10
	syscall
  
  
  
  
  5.2
  	.data
first:	.asciiz "a = "
second:	.asciiz "\nb = "
third:	.asciiz "\nm = "
	.text
	.globl main
main:
	li $t6, 2	# int a = 2
	li $t7, 10	# int b = 10
	li $t0, 0	# int m = 0
loop:	ble $t6, $0, exit	# while (a > 0)
	add $t0, $t0, $t7	# m += b
	addi $t6, $t6, -1	# a -= 1
	b loop		# loop
exit:	la $a0, first
	li $v0, 4
	syscall
	move $a0, $t6
	li $v0, 1
	syscall
	la $a0, second
	li $v0, 4
	syscall
	move $a0, $t7
	li $v0, 1
	syscall
	la $a0, third
	li $v0, 4
	syscall
	move $a0, $t0
	li $v0, 1
	syscall
	li $v0, 10
	syscall
  
  
  
  
  5.3
  	.data
arr: .word 2 10 5 4 50 12 54 3
end:
result:	.asciiz "even sum is "
	.text
	.globl main
main:
	li $t0, 0	# int evensum = 0
	la $t1, arr	# arr
	la $t2, end	# end
	subu $t2, $t2, $t1
	srl $t2, $t2, 2	# length of array
	li $t5, 0	# int i = 0
loop:	bge $t5, $t2, exit
	mul $t4, $t5, 4
	add $t3, $t4, $t1
	lw $t6, 0($t3)
	andi $t7, $t6, 1
	bne $t7, $0, looplast
	add $t0, $t0, $t6
looplast:
	addi $t5, $t5, 1
	b loop
exit:	la $a0, result
	li $v0, 4
	syscall
	move $a0, $t0
	li $v0, 1
	syscall
	li $v0, 10
	syscall
